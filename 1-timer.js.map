{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { Input } from 'postcss';\n\nconst findInput = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nlet userSelectedDate = null;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    console.log(selectedDates[0]);\n\n    if (selectedDate <= Date.now()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDate;\n      startBtn.classList.add('valid');\n    }\n  },\n};\n\nstartBtn.addEventListener('click', onStartClick);\nconst refs = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\nfunction onStartClick() {\n  startBtn.disabled = true;\n  findInput.disabled = true;\n\n  const timerId = setInterval(() => {\n    const now = Date.now();\n    const diff = userSelectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      findInput.disabled = false;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(diff);\n\n    refs.days.textContent = addLeadingZero(days);\n    refs.hours.textContent = addLeadingZero(hours);\n    refs.minutes.textContent = addLeadingZero(minutes);\n    refs.seconds.textContent = addLeadingZero(seconds);\n  }, 1000);\n}\n\nflatpickr(findInput, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["findInput","startBtn","userSelectedDate","options","selectedDates","selectedDate","iziToast","onStartClick","refs","timerId","now","diff","days","hours","minutes","seconds","convertMs","addLeadingZero","flatpickr","ms","value"],"mappings":"+IAMA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,cAAc,EACtD,IAAIC,EAAmB,KACvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EACpC,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAExBC,GAAgB,KAAK,OACvBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDL,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBC,EAAmBG,EACnBJ,EAAS,UAAU,IAAI,OAAO,EAEjC,CACH,EAEAA,EAAS,iBAAiB,QAASM,CAAY,EAC/C,MAAMC,EAAO,CACX,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EACA,SAASD,GAAe,CACtBN,EAAS,SAAW,GACpBD,EAAU,SAAW,GAErB,MAAMS,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAM,KAAK,MACXC,EAAOT,EAAmBQ,EAEhC,GAAIC,GAAQ,EAAG,CACb,cAAcF,CAAO,EACrBT,EAAU,SAAW,GACrB,MACD,CAED,KAAM,CAAE,KAAAY,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EAExDH,EAAK,KAAK,YAAcS,EAAeL,CAAI,EAC3CJ,EAAK,MAAM,YAAcS,EAAeJ,CAAK,EAC7CL,EAAK,QAAQ,YAAcS,EAAeH,CAAO,EACjDN,EAAK,QAAQ,YAAcS,EAAeF,CAAO,CAClD,EAAE,GAAI,CACT,CAEAG,EAAUlB,EAAWG,CAAO,EAE5B,SAASa,EAAUG,EAAI,CAMrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeG,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}